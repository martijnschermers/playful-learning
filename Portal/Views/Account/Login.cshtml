@model LoginViewModel

@{
    ViewBag.Title = "Login";
}

<h2 class="text-center">Login</h2>

<form class="m-auto col-10 col-md-6" asp-action="Login" method="post">
    <input asp-for="ReturnUrl"/>

    <div class="form-floating mb-3">
        <input class="form-control @(!ViewData.ModelState.IsValid && ViewData.ModelState["Email"]!.Errors.Count > 0 ? "is-invalid" : string.Empty)" asp-for="Email" placeholder="Emailadres"/>
        <label asp-for="Email"></label>
    
        @if (!ViewData.ModelState.IsValid && ViewData.ModelState["Email"]!.Errors.Count > 0) {
            <div class="invalid-feedback">
                @ViewData.ModelState["Email"]!.Errors[0].ErrorMessage
            </div>
        }
    </div>
    
    <div class="form-floating">
        <input class="form-control @(!ViewData.ModelState.IsValid && ViewData.ModelState["Password"]!.Errors.Count > 0 ? "is-invalid" : string.Empty)" asp-for="Password" placeholder="Wachtwoord"/>
        <label asp-for="Password"></label>

        @if (!ViewData.ModelState.IsValid && ViewData.ModelState["Password"]!.Errors.Count > 0) {
            <div class="invalid-feedback">
                @ViewData.ModelState["Password"]!.Errors[0].ErrorMessage
            </div>
        }
    </div>

    <div class="d-flex flex-column mt-3 align-items-center justify-center">
        <button class="btn btn-primary col-6 col-md-4" type="submit">Log in</button>
        <a class="link-primary my-2" asp-action="Register">Nog geen account? Registreer!</a>
    </div>
    
    <div class="alert alert-danger text-center" role="alert" asp-validation-summary="ModelOnly"></div>
</form>