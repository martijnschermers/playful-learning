@model GameNightViewModel

<div class="row row-cols-md-3 g-2 m-0 p-0">
    <div class="form-floating col-12 col-md-6 mb-2">
        <input class="form-control @(!ViewData.ModelState.IsValid && ViewData.ModelState["City"]!.Errors.Count > 0 ? "is-invalid" : string.Empty)" asp-for="City" placeholder="Stad"/>
        <label asp-for="City"></label>

        @if (!ViewData.ModelState.IsValid && ViewData.ModelState["City"]!.Errors.Count > 0) {
            <div class="invalid-feedback">
                @ViewData.ModelState["City"]!.Errors[0].ErrorMessage
            </div>
        }
    </div>

    <div class="form-floating col-12 col-md-4 mb-2">
        <input class="form-control @(!ViewData.ModelState.IsValid && ViewData.ModelState["Street"]!.Errors.Count > 0 ? "is-invalid" : string.Empty)" asp-for="Street" placeholder="Straat"/>
        <label asp-for="Street"></label>

        @if (!ViewData.ModelState.IsValid && ViewData.ModelState["Street"]!.Errors.Count > 0) {
            <div class="invalid-feedback">
                @ViewData.ModelState["Street"]!.Errors[0].ErrorMessage
            </div>
        }
    </div>

    <div class="form-floating col-12 col-md-2 mb-2">
        <input class="form-control @(!ViewData.ModelState.IsValid && ViewData.ModelState["HouseNumber"]!.Errors.Count > 0 ? "is-invalid" : string.Empty)" asp-for="HouseNumber" placeholder="Huisnummer"/>
        <label asp-for="HouseNumber"></label>

        @if (!ViewData.ModelState.IsValid && ViewData.ModelState["HouseNumber"]!.Errors.Count > 0) {
            <div class="invalid-feedback">
                @ViewData.ModelState["HouseNumber"]!.Errors[0].ErrorMessage
            </div>
        }
    </div>
</div>

<div class="form-floating mb-2">
    <input class="form-control @(!ViewData.ModelState.IsValid && ViewData.ModelState["MaxPlayers"]!.Errors.Count > 0 ? "is-invalid" : string.Empty)" asp-for="MaxPlayers" placeholder="Maximaal aantal spelers"/>
    <label asp-for="MaxPlayers"></label>

    @if (!ViewData.ModelState.IsValid && ViewData.ModelState["MaxPlayers"]!.Errors.Count > 0) {
        <div class="invalid-feedback">
            @ViewData.ModelState["MaxPlayers"]!.Errors[0].ErrorMessage
        </div>
    }
</div>

<div class="form-floating mb-2">
    <input class="form-control @(!ViewData.ModelState.IsValid && ViewData.ModelState["DateTime"]!.Errors.Count > 0 ? "is-invalid" : string.Empty)" asp-for="DateTime" placeholder="Datum en tijd"/>
    <label asp-for="DateTime"></label>

    @if (!ViewData.ModelState.IsValid && ViewData.ModelState["DateTime"]!.Errors.Count > 0) {
        <div class="invalid-feedback">
            @ViewData.ModelState["DateTime"]!.Errors[0].ErrorMessage
        </div>
    }
</div>

<div class="form-group">
    <label class="form-check-label" asp-for="IsPotluck"></label>
    <input class="form-check-input" asp-for="IsPotluck"/>
</div>

<div class="form-group">
    <label class="form-check-label" asp-for="IsOnlyForAdults"></label>
    <input class="form-check-input" asp-for="IsOnlyForAdults"/>
</div>

<label asp-for="Games"></label>
<div class="row g-1 m-auto d-flex justify-content-center align-items-center mb-2">
    @foreach (var game in Model.Games) {
        <div class="col-sm-6">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">@game.Value.Name</h5>
                    <p class="card-text">
                        @game.Value.Description <br/>
                        Voor volwassenen:
                        @if (game.Value.IsOnlyForAdults) {
                            <i class="bi bi-check-lg"></i>
                        } else {
                            <i class="bi bi-x-lg"></i>
                        }
                    </p>
                    <div class="form-check form-switch">
                        <input class="form-check-input" name="Game" type="checkbox" checked="@game.IsChecked" value="@game.Value.Id"/>
                    </div>
                </div>
            </div>
        </div>
    }

    @* TODO: Fix this error message, not showing *@
    @if (!ViewData.ModelState.IsValid && ViewData.ModelState["Game"]!.Errors.Count > 0) {
        <div class="invalid-feedback">
            @ViewData.ModelState["Game"]!.Errors[0].ErrorMessage
        </div>
    }
</div>